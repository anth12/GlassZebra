{
  "x-generator": "NSwag v13.3.0.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "CleanArchitecture API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Game": {
      "post": {
        "tags": [
          "Game"
        ],
        "operationId": "Game_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGameCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGameResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Game"
        ],
        "operationId": "Game_Update",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Game/{clientId}": {
      "get": {
        "tags": [
          "Game"
        ],
        "operationId": "Game_Get",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Game/Join/{joinCode}": {
      "post": {
        "tags": [
          "Game"
        ],
        "operationId": "Game_Join",
        "parameters": [
          {
            "name": "joinCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinGameResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Game/Leave": {
      "post": {
        "tags": [
          "Game"
        ],
        "operationId": "Game_Leave",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantGameCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateGameResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "gameClientId": {
            "type": "string",
            "format": "guid"
          },
          "participantClientId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateGameCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GameDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "joinCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GameStatus"
          },
          "owner": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameParticipantDto"
              }
            ]
          },
          "participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GameParticipantDto"
            }
          },
          "currentRound": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameRoundDto"
              }
            ]
          },
          "questionsPerRound": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRounds": {
            "type": "integer",
            "format": "int32"
          },
          "difficulty": {
            "$ref": "#/components/schemas/Difficulty"
          },
          "categories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuestionCategoryDto"
            }
          }
        }
      },
      "GameStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Lobby",
          "InProgress",
          "Over"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "GameParticipantDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ParticipantStatus"
          },
          "isOwner": {
            "type": "boolean"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "totalScore": {
            "type": "integer",
            "format": "int32"
          },
          "roundScore": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ParticipantStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Active",
          "Inactive",
          "Disconnected",
          "Left"
        ],
        "enum": [
          1,
          2,
          4,
          8
        ]
      },
      "GameRoundDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/GameType"
          },
          "currentQuestion": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuestionDto"
              }
            ]
          },
          "currentQuestionTimeUtc": {
            "type": "string",
            "format": "date-time"
          },
          "currentQuestionIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Quiz",
          "Doodle"
        ],
        "enum": [
          0,
          1
        ]
      },
      "QuestionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "difficulty": {
            "$ref": "#/components/schemas/Difficulty"
          },
          "categories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuestionCategoryDto"
            }
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "QuestionType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "SingleChoiceQuestion",
          "MultipleChoiceQuestion",
          "FreeTextQuestion",
          "SingleChoiceBuzzInQuestion",
          "FreeTextDoodle"
        ],
        "enum": [
          1,
          2,
          4,
          9,
          16
        ]
      },
      "Difficulty": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Easy",
          "Average",
          "Hard",
          "VeryHard"
        ],
        "enum": [
          1,
          2,
          4,
          8
        ]
      },
      "QuestionCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "JoinGameResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "gameClientId": {
            "type": "string",
            "format": "guid"
          },
          "game": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameDto"
              }
            ]
          },
          "participantClientId": {
            "type": "string",
            "format": "guid"
          },
          "participant": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GameParticipantDto"
              }
            ]
          }
        }
      },
      "UpdateGameCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ParticipantGameCommand"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "questionsPerRound": {
                "type": "integer",
                "format": "int32"
              },
              "numberOfRounds": {
                "type": "integer",
                "format": "int32"
              },
              "difficulty": {
                "$ref": "#/components/schemas/Difficulty"
              },
              "categories": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "ParticipantGameCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "gameClientId": {
            "type": "string",
            "format": "guid"
          },
          "participantClientId": {
            "type": "string",
            "format": "guid"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}